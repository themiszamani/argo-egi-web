<config xmlns="http://software.in2p3.fr/lavoisier/config.xsd"
        xmlns:date="http://exslt.org/dates-and-times"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:str="http://exslt.org/strings"
        xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">



    <view name="StateColor">
        <info>
            <category>Status</category>
            <description>Status List</description>
        </info>

        <connector type="XMLConnector">
            <parameter name="content">
                <entry key="OK">green</entry>
                <entry key="WARNING">orange</entry>
                <entry key="UNKNOWN">lightgrey</entry>
                <entry key="MISSING">#53424a</entry>
                <entry key="CRITICAL">red</entry>
                <entry key="DOWNTIME">grey</entry>
            </parameter>

        </connector>
    </view>


    <!-- @TODO vérifier avec trigger si c'est utile de regénérer 3 jours -->

    <view name="site_status_reports_cached">
        <info>
            <category>Status Report</category>
            <description>Site Reports - cache Rotated</description>
        </info>
        <argument name="mode">RW</argument>
        <argument name="report">Critical</argument>

        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('root')"></parameter>
        </connector>

        <processors>
            <insert match="/root" nodes="
            view('api.status.rotating.caches',entry('group_type','sites')|entry('diff','0')|entry('report',$report)|entry('mode',$mode))
            |view('api.status.rotating.caches',entry('group_type','sites')|entry('diff','1')|entry('report',$report)|entry('mode',$mode))
            |view('api.status.rotating.caches',entry('group_type','sites')|entry('diff','2')|entry('report',$report)|entry('mode',$mode))">

            </insert>
        </processors>
    </view>




    <view name="status_site_3_Critical">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_site',entry('lastdays','3'))"></parameter>
        </connector>

        <cache type="FileCache">
            <!--<trigger type="ViewCreatedTrigger"/>-->
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">14</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="all">true</parameter>
                <parameter name="views">
                    <entry>goc.siteList</entry>
                    <entry>goc.listSiteFedcloud</entry>
                </parameter>
            </trigger>


        </cache>
    </view>

    <view name="status_site_10_Critical">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_site',entry('lastdays','10'))"></parameter>
        </connector>

        <cache type="FileCache">
            <!--<trigger type="ViewCreatedTrigger"/>-->
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">26</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="all">true</parameter>
                <parameter name="views">
                    <entry>goc.siteList</entry>
                    <entry>goc.listSiteFedcloud</entry>
                </parameter>
            </trigger>
        </cache>
    </view>

    <view name="status_site_30_Critical">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_site',entry('lastdays','30'))"></parameter>
        </connector>

        <cache type="FileCache">
            <!--<trigger type="ViewCreatedTrigger"/>-->
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">38</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="all">true</parameter>
                <parameter name="views">
                    <entry>goc.siteList</entry>
                    <entry>goc.listSiteFedcloud</entry>
                </parameter>
            </trigger>

        </cache>
    </view>



    <view name="status_site_3_OPS-MONITOR-Critical">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_site',entry('lastdays','3')|entry('report','OPS-MONITOR-Critical'))"></parameter>
        </connector>

        <cache type="FileCache">
            <!--<trigger type="ViewCreatedTrigger"/>-->
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">14</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="all">true</parameter>
                <parameter name="views">
                    <entry>goc.siteList</entry>
                    <entry>goc.listSiteFedcloud</entry>
                </parameter>
            </trigger>

        </cache>
    </view>

    <view name="status_site_10_OPS-MONITOR-Critical">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_site',entry('lastdays','10')|entry('report','OPS-MONITOR-Critical'))"></parameter>
        </connector>

        <cache type="FileCache">
            <!--<trigger type="ViewCreatedTrigger"/>-->
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">26</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="all">true</parameter>
                <parameter name="views">
                    <entry>goc.siteList</entry>
                    <entry>goc.listSiteFedcloud</entry>
                </parameter>
            </trigger>

        </cache>
    </view>

    <view name="status_site_30_OPS-MONITOR-Critical">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_site',entry('lastdays','30')|entry('report','OPS-MONITOR-Critical'))"></parameter>
        </connector>

        <cache type="FileCache">
            <!--<trigger type="ViewCreatedTrigger"/>-->
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">38</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="all">true</parameter>
                <parameter name="views">
                    <entry>goc.siteList</entry>
                    <entry>goc.listSiteFedcloud</entry>
                </parameter>
            </trigger>
        </cache>
    </view>

    <view name="status_site_3_Fedcloud">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_site',entry('lastdays','3')|entry('report','Fedcloud'))"></parameter>
        </connector>

        <cache type="FileCache">
            <!--<trigger type="ViewCreatedTrigger"/>-->
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">14</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="all">true</parameter>
                <parameter name="views">
                    <entry>goc.siteList</entry>
                    <entry>goc.listSiteFedcloud</entry>
                </parameter>
            </trigger>

        </cache>
    </view>

    <view name="status_site_10_Fedcloud">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_site',entry('lastdays','10')|entry('report','Fedcloud'))"></parameter>
        </connector>

        <cache type="FileCache">
            <!--<trigger type="ViewCreatedTrigger"/>-->
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">26</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="all">true</parameter>
                <parameter name="views">
                    <entry>goc.siteList</entry>
                    <entry>goc.listSiteFedcloud</entry>
                </parameter>
            </trigger>

        </cache>
    </view>

    <view name="status_site_30_Fedcloud">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_site',entry('lastdays','30')|entry('report','Fedcloud'))"></parameter>
        </connector>

        <cache type="FileCache">
            <!--<trigger type="ViewCreatedTrigger"/>-->
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">38</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="all">true</parameter>
                <parameter name="views">
                    <entry>goc.siteList</entry>
                    <entry>goc.listSiteFedcloud</entry>
                </parameter>
            </trigger>

        </cache>
    </view>




    <!-- @TODO Récupérer jour courant -->
    <view name="status_site" xmlns:java="http://software.in2p3.fr/lavoisier/java">
        <info>
            <category>Status Report</category>
            <description>Site Reports - cache Rotated</description>
        </info>

        <argument name="ngi">all</argument>
        <argument name="site">false</argument>
        <argument name="lastdays">3</argument>
        <argument name="report">Critical</argument>
        <argument name="Fedcloud">_fedcloud_</argument>
        <argument name="listSiteFedcloud" eval="concat(',',join(view('goc.listSiteFedcloud')/e:entries/e:entry/text(),','),',')"></argument>

        <variable name='setutc' eval="java:java.util.TimeZone.setDefault(java:java.util.TimeZone.getTimeZone('UTC'))"></variable>
        <variable name="start_date" eval="concat(str:replace(substring(date:add(date:date-time(),concat('-P',$lastdays,'D')), 0,20),' ','T'),'Z')"></variable>
        <variable name="end_date" eval="concat(str:replace(substring(date:date-time(), 0,20),' ','T'),'Z')"></variable>


        <connector type="XMLConnector">
            <parameter name="content" eval="view('api.status.call',entry('group_type','sites')|entry('site',$site)|entry('start_time',$start_date)|entry('end_time',$end_date)|entry('report',$report))"></parameter>
        </connector>

        <processors>
        <element in="root" if="$Fedcloud!='_fedcloud_'">
                    <element in="group" if="contains($listSiteFedcloud,concat(',',@name,','))"></element>
                    <element-ignore></element-ignore>
        </element>
        </processors>

    </view>



    <!-- @TODO Récupérer jour courant -->
    <view name="status_report-site">
        <info>
            <category>Status Report</category>
            <description>Site Reports - cache Rotated</description>
        </info>



        <argument name="ngi">all</argument>
        <argument name="site">false</argument>

        <argument name="start" eval="false()"></argument>
        <argument name="end" eval="false()"></argument>
        <argument name="report">Critical</argument>
        <argument name="Fedcloud">_fedcloud_</argument>
        <argument name="listSiteFedcloud" eval="concat(',',join(view('goc.listSiteFedcloud')/e:entries/e:entry/text(),','),',')"></argument>

        <argument name="lastdays" eval="choose($start!='false',99,3)"></argument>

        <variable name="dateTime" eval="date:date-time()"></variable>
        <variable name="start_date" eval="choose($start!='false',concat($start,'T00:00:00Z'),concat(str:replace(substring(date:add(date:date-time(),concat('-P',$lastdays,'D')), 0,20),' ','T'),'Z'))"/>
        <variable name="end_date" eval="choose($end!='false',concat($end,'T00:00:00Z'),concat(str:replace(substring(date:date-time(), 0,20),' ','T'),'Z'))"/>
        <variable name="nbdays">3,10,30</variable>



        <connector type="XMLConnector">
            <parameter name="content" eval="
            view(
                choose(
                boolean(str:split($nbdays,',')[text()=$lastdays]),
                    concat('status_site_',$lastdays,'_',$report),
                    'api.status.call')
            ,entry('group_type','sites')|entry('site',$site)|entry('start_time',$start_date)|entry('end_time',$end_date)|entry('report',$report))"/>
        </connector>

        <processors>
            <element in="root">

                <set variable="SiteList">view('listSitesbyNgi')</set>
                <attribute-create out="view">'status_report-sf'</attribute-create>
                <attribute-create out="ngi" if="$ngi!='all'">$ngi</attribute-create>
                <attribute-create out="lastdays">$lastdays</attribute-create>
                <attribute-create out="dateTime">$dateTime</attribute-create>
                <attribute-create out="start_date">$start_date</attribute-create>
                <attribute-create out="end_date">$end_date</attribute-create>

                <element in="group" if="contains(concat($site,','),@name) or $site='false'">
                    <attribute-create out="group">choose($SiteList/results/Ngi[SITE/@NAME=current()/../@name]/@key!='',$SiteList/results/Ngi[SITE/@NAME=current()/../@name]/@key,'UNCERTIFIED')</attribute-create>
                </element>
                <element-ignore></element-ignore>
            </element>

            <elements path="root">
                <element in="group" if="@group=$ngi or $ngi='all'"></element>
                <element-ignore></element-ignore>
            </elements>


                <element in="root" if="$Fedcloud!='_fedcloud_'">

                    <element in="group" if="contains($listSiteFedcloud,concat(',',@name,','))"></element>
                    <element-ignore></element-ignore>
                </element>



            <elements path="root">
                <element-ignore in="group"></element-ignore>
                <element-create>
                    sort_by_string(../group,'@name')
                </element-create>
            </elements>

            <elements path="root">
                <element-create-as-parent out="group" attributes="@*" group-by="@name">
                    <element in="group" ></element>
                </element-create-as-parent>
            </elements>

            <elements path="root/group">
                <element-ignore in="group">
                    <element></element>
                </element-ignore>
            </elements>

            <elements path="root/group">
                <element-ignore in="status"></element-ignore>
                <element-create>sort_by_string(../status,'@timestamp')</element-create>
            </elements>

            <element in="root">
                <set variable="StateColor">view('StateColor')</set>

                <element in="group">
                    <element in="status">
                        <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@value]/text()</attribute-create>
                        <attribute-create out="end_time" if="current()/../following-sibling::status">current()/../following-sibling::status/@timestamp</attribute-create>
                        <attribute-create out="end_time" if="not(current()/../following-sibling::status)">../ancestor::root/@end_time</attribute-create>
                    </element>
                </element>

            </element>

            <elements path="root/group">
                <element-ignore in="status" if="preceding-sibling::status and date:seconds(@timestamp) &lt; date:seconds($start_date)"></element-ignore>
                <element in="status" if="not(preceding-sibling::status)" >
                    <attribute in="timestamp">$start_date</attribute>
                </element>
            </elements>


        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/status_report.html</parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/status_report.html</parameter>

            </renderer>
        </renderers>

    </view>

    <view name="status_report-sf">
    <info>
        <category>Status Report</category>
        <description>SF reports for a given site</description>
    </info>


    <argument name="site">false</argument>
    <argument name="report">Critical</argument>
        <argument name="sf">_SF_</argument>
        <argument name="start">_START_</argument>
        <argument name="end">_END_</argument>

        <argument name="start_date" eval="choose($start!='_START_',concat($start,'T00:00:00Z'),concat(substring(date:add(date:date-time(),'-P3D'), 0,11),'T00:00:00Z'))"></argument>
        <argument name="end_date" eval="choose($end!='_END_',concat($end,'T00:00:00Z'),concat(substring(date:date-time(),0,11),'T23:59:59Z'))"></argument>


    <connector type="XMLConnector">
        <parameter name="content" eval="view('api.status',entry('group_type','sites')|entry('site',$site)|entry('start_time',$start_date)|entry('end_time',$end_date)|entry('report',$report))"></parameter>
    </connector>

        <processors>
            <element in="root">
                <set variable="SiteList">view('listSitesbyNgi')</set>

                <attribute-create out="ngi">$SiteList/results/Ngi[SITE/@NAME=$site]/@key</attribute-create>
                <attribute-create out="view">'status_report-endpoints'</attribute-create>
                <element-ignore in="group">
                <element in="group">
                    <attribute-create out="group">$site</attribute-create>
                </element>
                </element-ignore>
            </element>


            <elements path="root">
                <element-ignore in="group"></element-ignore>
                <element-create>
                    sort_by_string(../group,'@name')
                </element-create>
            </elements>

            <elements path="root">
                <element-create-as-parent out="group" attributes="@*" group-by="@name">
                    <element in="group" ></element>
                </element-create-as-parent>
            </elements>

            <elements path="root/group">
                <element-ignore in="group">
                    <element></element>
                </element-ignore>
            </elements>

            <elements path="root/group">
                <element-ignore in="status"></element-ignore>
                <element-create>sort_by_string(../status,'@timestamp')</element-create>
            </elements>

            <element in="root">
                <set variable="StateColor">view('StateColor')</set>

                <element in="group">
                    <element in="status">
                        <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@value]/text()</attribute-create>
                        <attribute-create out="end_time" if="current()/../following-sibling::status">current()/../following-sibling::status/@timestamp</attribute-create>
                        <attribute-create out="end_time" if="not(current()/../following-sibling::status)">../ancestor::root/@end_time</attribute-create>
                    </element>
                </element>

            </element>

            <elements path="root/group">
                <element-ignore in="status" if="preceding-sibling::status and date:seconds(@timestamp) &lt; date:seconds($start_date)"></element-ignore>
                <element in="status" if="not(preceding-sibling::status)" >
                    <attribute in="timestamp">$start_date</attribute>
                </element>
            </elements>



        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/status_report.html</parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/status_report.html</parameter>

            </renderer>
        </renderers>


    </view>

    <view name="status_report-endpoints">
        <info>
            <category>Status Report</category>
            <description>Endpoints reports for a given site and SF</description>
        </info>


        <argument name="site">false</argument>
        <argument name="report">sites</argument>
        <argument name="service"></argument>
        <argument name="start">_START_</argument>
        <argument name="end">_END_</argument>

        <argument name="start_date" eval="choose($start!='_START_',concat($start,'T00:00:00Z'),concat(substring(date:add(date:date-time(),'-P3D'), 0,11),'T00:00:00Z'))"></argument>
        <argument name="end_date" eval="choose($end!='_END_',concat($end,'T00:00:00Z'),concat(substring(date:date-time(),0,11),'T23:59:59Z'))"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="view('api.status',entry('group_type','sites')|entry('site',$site)|entry('service',$service)|entry('start_time',$start_date)|entry('end_time',$end_date)|entry('report',$report))"></parameter>
        </connector>

        <processors>
            <element in="root">
                <set variable="SiteList">view('listSitesbyNgi')</set>

                <attribute-create out="ngi">$SiteList/results/Ngi[SITE/@NAME=$site]/@key</attribute-create>
                <attribute-create out="view">'status_report-metrics'</attribute-create>
                <element-ignore in="group">
                    <element-ignore in="group">
                        <element in="endpoint" out="group">
                            <attribute-create out="group">$service</attribute-create>
                            <attribute-create out="site">$site</attribute-create>
                        </element>
                    </element-ignore>
                </element-ignore>
            </element>


            <elements path="root">
                <element-ignore in="group"></element-ignore>
                <element-create>
                    sort_by_string(../group,'@name')
                </element-create>
            </elements>

            <elements path="root">
                <element-create-as-parent out="group" attributes="@*" group-by="@name">
                    <element in="group" ></element>
                </element-create-as-parent>
            </elements>

            <elements path="root/group">
                <element-ignore in="group">
                    <element></element>
                </element-ignore>
            </elements>

            <elements path="root/group">
                <element-ignore in="status"></element-ignore>
                <element-create>sort_by_string(../status,'@timestamp')</element-create>
            </elements>

            <element in="root">
                <set variable="StateColor">view('StateColor')</set>

                <element in="group">
                    <element in="status">
                        <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@value]/text()</attribute-create>
                        <attribute-create out="end_time" if="current()/../following-sibling::status">current()/../following-sibling::status/@timestamp</attribute-create>
                        <attribute-create out="end_time" if="not(current()/../following-sibling::status)">../ancestor::root/@end_time</attribute-create>
                    </element>
                </element>


            </element>

            <elements path="root/group">
                <element-ignore in="status" if="preceding-sibling::status and date:seconds(@timestamp) &lt; date:seconds($start_date)"></element-ignore>
                <element in="status" if="not(preceding-sibling::status)" >
                    <attribute in="timestamp">$start_date</attribute>
                </element>
            </elements>

            <elements path="root/group">
                <element-ignore in="status" if="preceding-sibling::status/@timestamp=current()/@timestamp"></element-ignore>
                <element-ignore in="status" if="@timestamp=@end_time"></element-ignore>
            </elements>

        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/status_report.html</parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/status_report.html</parameter>

            </renderer>
        </renderers>


    </view>


    <view name="status_report-metrics">
        <info>
            <category>Status Report</category>
            <description>Metrics reports for a given site and SF and endpoint</description>
        </info>


        <argument name="site">false</argument>
        <argument name="report">sites</argument>
        <argument name="service"></argument>
        <argument name="endpoint"></argument>
        <argument name="sf">_SF_</argument>
        <argument name="start">_START_</argument>
        <argument name="end">_END_</argument>
        <argument name="overview">mod</argument>

        <argument name="start_date" eval="choose($start!='_START_',concat($start,'T00:00:00Z'),concat(substring(date:add(date:date-time(),'-P3D'), 0,11),'T00:00:00Z'))"></argument>
        <argument name="end_date" eval="choose($end!='_END_',concat($end,'T00:00:00Z'),concat(substring(date:date-time(),0,11),'T23:59:59Z'))"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="view('api.status',entry('group_type','sites')|entry('site',$site)|entry('service',$service)|entry('endpoint',$endpoint)|entry('start_time',$start_date)|entry('end_time',$end_date)|entry('report',$report))"></parameter>
        </connector>

        <processors>
            <element in="root">
                <set variable="SiteList">view('listSitesbyNgi')</set>

                <attribute-create out="ngi">$SiteList/results/Ngi[SITE/@NAME=$site]/@key</attribute-create>
                <attribute-create out="view">'metric-output'</attribute-create>

                <element-ignore in="group">
                    <element-ignore in="group">
                        <element-ignore in="endpoint">
                        <element in="metric" out="group">
                            <attribute-create out="service">$service</attribute-create>
                            <attribute-create out="site">$site</attribute-create>
                            <attribute-create out="endpoint">$endpoint</attribute-create>
                            <attribute-create out="group">$endpoint</attribute-create>
                        </element>
                    </element-ignore>
                    </element-ignore>
                </element-ignore>
            </element>

            <elements path="root">
                <element-ignore in="group"></element-ignore>
                <element-create>
                    sort_by_string(../group,'@name')
                </element-create>
            </elements>

            <elements path="root">
                <attribute-create out="overview">$overview</attribute-create>
                <element-create-as-parent out="group" attributes="@*" group-by="@name">
                    <element in="group" ></element>
                </element-create-as-parent>
            </elements>

            <elements path="root/group">
                <element-ignore in="group">
                    <element></element>
                </element-ignore>
            </elements>

            <elements path="root/group">
                <element-ignore in="status"></element-ignore>
                <element-create>sort_by_string(../status,'@timestamp')</element-create>
            </elements>






            <element in="root" if="$overview='mod'">

                <set variable="previous">null()</set>
                <set variable="position">0</set>
                <set variable="modulo">floor(count(group/status) div 200)</set>
                <attribute in="overview">'mod'</attribute>

                <element in="group">
                    <element in="status" if="$previous/@value!=@value or ($position mod $modulo = 0)">
                        <set variable="previous">.</set>
                        <set variable="position">$position+1</set>
                    </element>

                    <element-ignore>
                        <set variable="position">$position+1</set>
                    </element-ignore>
                </element>
            </element>


            <element in="root">
                <set variable="StateColor">view('StateColor')</set>

                <element in="group">
                    <element in="status">
                        <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@value]/text()</attribute-create>
                        <attribute-create out="end_time" if="current()/../following-sibling::status">current()/../following-sibling::status/@timestamp</attribute-create>
                        <attribute-create out="end_time" if="not(current()/../following-sibling::status)">../ancestor::root/@end_time</attribute-create>
                        <attribute-create out="exec_time">../@timestamp</attribute-create>
                    </element>
                </element>

            </element>

            <elements path="root/group">
                <element in="status" if="not(preceding-sibling::status)">
                        <attribute in="timestamp">$start_date</attribute>
                </element>
            </elements>




        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/status_report.html</parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/status_report.html</parameter>

            </renderer>
        </renderers>


    </view>

    <view name="metric-output">


        <argument name="metric"></argument>
        <argument name="endpoint"></argument>
        <argument name="metric"></argument>
        <argument name="site"></argument>
        <argument name="service"></argument>
        <argument name="start_time"></argument>
        <argument name="end_time"></argument>
        <argument name="report"></argument>

        <connector type="XMLConnector">
            <parameter name="content"
                       eval="view('api.output.details',entry('exec_time',$exec_time)|entry('endpoint',$endpoint)|entry('metric',$metric))">
            </parameter>
        </connector>

            <processors>
                <element in="root">
                    <set variable="SiteList">view('listSitesbyNgi')</set>
                    <attribute-create out="ngi">$SiteList/results/Ngi[SITE/@NAME=$site]/@key</attribute-create>
                    <attribute-create out="site">$site</attribute-create>
                    <attribute-create out="service">$service</attribute-create>
                    <attribute-create out="start_time">$start_time</attribute-create>
                    <attribute-create out="end_time">$end_time</attribute-create>
                    <attribute-create out="report">$report</attribute-create>
                </element>
            </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/html/output_details.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/output_details.html</parameter>

            </renderer>
        </renderers>
    </view>

    <view name="status_report-form">
    <info>
        <category>Status Report</category>
        <description>Form for customised report</description>
    </info>


        <connector type="XMLConnector">
            <parameter name="content" eval="view('listParameters',entry('mode','full'))"></parameter>

        </connector>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/status_form_reports.html</parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/status_form_reports.html</parameter>
            </renderer>
        </renderers>
    </view>


</config>
